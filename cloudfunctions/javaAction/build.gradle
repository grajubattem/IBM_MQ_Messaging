// Copyright 2017 IBM Corp.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'

    compile fileTree(dir: 'lib', include: ['*.jar'])
}

compileJava.doFirst {
    // Minimal check that the dependencies have been correctly downloaded and
    // applied to the sample project so that we can include them in the built
    // jar.
    assert file("./lib/jms.jar").exists()
    assert file("./lib/com.ibm.mq.allclient.jar").exists()
}

jar {

    archiveName 'ProcessMQMessages.jar'

    manifest {
        attributes 'Main-Class': 'ProcessMQMessages'
    }

    into ('/')
    {

      // This is the line that creates the "fat jar" described in the tutorial, where
      // the dependency jars are unzipped and included in the executable jar as individual
      // classes.
      from configurations.compile.collect { zipTree(it) }

      // Need to exclude the metadata from any signed jars because our new combined
      // jar will have a different checksum/signature.
      exclude("**/META-INF/*.SF")
      exclude("**/META-INF/*.DSA")
      exclude("**/META-INF/*.RSA")

    }

}
